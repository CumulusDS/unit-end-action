name: 'action-template'
description: 'description'
inputs:
#  text:
#    description: "text for slack message"
#    required: false
#    default: "${{ github.repository }} unit test"
#  status:
#    description: "Job Status"
#    required: false
#    default: "${{ job.status }}"
#  author_name:
#    description: "Message author name for slack message"
#    required: false
#    default: "${{ github.repository }} ${{ github.workflow }}"
#  slack_webhook_url:
#    description: ""
#    required: true
#    default: "" # remove this when we can make notify a part of this step
  uploadArtifactName:
    description: "Name of uploaded artifact"
    required: false
    default: upload-artifacts
  artifactPath:
    description: "Path to upload as an artifact"
    required: false
    default: "var"
  githubEventAction:
    description: "github.event.action"
    required: false
    default: "${{ github.event.action }}"
  githubEventName:
    description: "github.event_name"
    required: false
    default: "${{ github.event_name }}"
outputs:
  matrix:
    description: "Deployment matrix"
    value: "${{ steps.set-matrix.outputs.matrix }}"
  stage:
    description: "Feature stage"
    value: "${{ steps.set-feature-stage.outputs.stage }}"
runs:
  using: "composite"
  steps:
#    - name: Notify Slack
#      id: notify-slack
#      uses: 8398a7/action-slack@v3.9.2
#      # if: always() && github.actor != 'dependabot[bot]' # if conditional not yet supported for composite actions
#      with:
#        text: ${{ inputs.asdf }}
#        status: ${{ inputs.asdf }}
#        author_name: ${{ inputs.asdf }}
#      env:
#        SLACK_WEBHOOK_URL: ${{ inputs.asdf }}
    - name: Upload artifacts
      id: upload-artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.uploadArtifactName }}
        path: ${{ inputs.artifactPath }}
    - name: Determine trigger
      id: trigger
      run: |
        echo "::group::Determining action trigger"
        echo "${{ inputs.githubEventAction }}"
        if [ "${{ inputs.githubEventAction }}" == "released" ]; then
          echo "TRIGGER=release" >> $GITHUB_ENV
        else
          echo "TRIGGER=branch" >> $GITHUB_ENV
        fi
        echo "::endgroup::"
      shell: bash
    - name: Set feature stage
      id: set-feature-stage
      uses: CumulusDS/feature-stage-action@initial-setup
      with:
        githubEventName: ${{ inputs.githubEventName }}
    - name: Matrix Outputs
      id: set-matrix
      run: |
        echo "::group::Set Matrix"
        if [[ "${{ env.TRIGGER }}" == "branch" ]]; then
          echo "::set-output name=matrix::{\"include\":[{\"region\":\"us-east-1\",\"stage\":\"${{ env.FEATURE_STAGE }}\"},{\"region\":\"us-east-2\",\"stage\":\"${{ env.FEATURE_STAGE }}\"}]}"
        elif [[ "${{ env.TRIGGER }}" == "release" ]]; then
          echo "::set-output name=matrix::{\"include\":[{\"region\":\"us-east-1\",\"stage\":\"dev\"},{\"region\":\"us-east-2\",\"stage\":\"dev\"},{\"region\":\"us-east-1\",\"stage\":\"prod\"},{\"region\":\"us-east-2\",\"stage\":\"prod\"},{\"region\":\"ap-southeast-1\",\"stage\":\"prod\"},{\"region\":\"eu-west-1\",\"stage\":\"prod\"}]}"
        else
          echo "No match for event trigger"
        fi
        echo "::endgroup::"
      shell: bash
    - name: Echo Matrix
      id: echo-matrix
      env:
        MATRIX: ${{ toJson(steps.set-matrix.outputs.matrix) }}
      run: |
        echo "::group::Echo Matrix"
        echo ${MATRIX} | sed 's/\\"/"/g' | sed 's/^.\(.*\).$/\1/' | jq '.'
        echo "::endgroup::"
      shell: bash
